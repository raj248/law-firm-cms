"use strict";const n=require("electron");n.contextBridge.exposeInMainWorld("ipcRenderer",{on(...e){const[t,i]=e;return n.ipcRenderer.on(t,(r,...a)=>i(r,...a))},off(...e){const[t,...i]=e;return n.ipcRenderer.off(t,...i)},send(...e){const[t,...i]=e;return n.ipcRenderer.send(t,...i)},invoke(...e){const[t,...i]=e;return n.ipcRenderer.invoke(t,...i)}});n.contextBridge.exposeInMainWorld("electronUpdater",{checkForUpdate:()=>n.ipcRenderer.invoke("check-update"),onUpdateAvailable:e=>n.ipcRenderer.on("update_available",e),onDownloadProgress:e=>n.ipcRenderer.on("update_download_progress",e),onUpdateDownloaded:e=>n.ipcRenderer.on("update_downloaded",e),restartApp:()=>n.ipcRenderer.send("restart_app")});n.contextBridge.exposeInMainWorld("debug",{log:(...e)=>n.ipcRenderer.send("log",...e)});n.contextBridge.exposeInMainWorld("electronAPI",{getNotificationSoundPath:()=>n.ipcRenderer.invoke("get-notification-sound-path"),openFile:e=>n.ipcRenderer.invoke("open-file",e),appReady:()=>n.ipcRenderer.send("app-ready"),getAppVersion:()=>n.ipcRenderer.invoke("get-app-version"),checkForUpdates:()=>n.ipcRenderer.invoke("check-for-update"),saveTempFile:(e,t)=>n.ipcRenderer.invoke("save-temp-file",e,t)});n.contextBridge.exposeInMainWorld("database",{insertAudit:e=>n.ipcRenderer.invoke("database:insert-audit",e),getAllAudits:()=>n.ipcRenderer.invoke("database:get-all-audits"),getAuditById:e=>n.ipcRenderer.invoke("get-audit-by-id",e),unsyncedAudits:()=>n.ipcRenderer.invoke("database:get-unsynced-audits"),updateAuditSync:e=>n.ipcRenderer.invoke("database:update-audit-sync",e),insertClient:e=>n.ipcRenderer.invoke("database:insert-client",e),getAllClients:()=>n.ipcRenderer.invoke("database:get-all-clients"),deleteClient:e=>n.ipcRenderer.invoke("database:delete-client",e),updateClientField:(e,t,i)=>n.ipcRenderer.invoke("database:update-client-field",e,t,i),insertCase:e=>n.ipcRenderer.invoke("database:insert-case",e),getAllCases:()=>n.ipcRenderer.invoke("database:get-all-cases"),getCasesByClient:e=>n.ipcRenderer.invoke("database:get-cases-by-client",e),deleteCase:e=>n.ipcRenderer.invoke("database:delete-case",e),updateCase:(e,t,i)=>n.ipcRenderer.invoke("database:update-case",e,t,i),insertTask:e=>n.ipcRenderer.invoke("database:insert-task",e),getAllTasks:()=>n.ipcRenderer.invoke("database:get-all-tasks"),getTasksByClient:e=>n.ipcRenderer.invoke("database:get-tasks-by-client",e),updateTask:e=>n.ipcRenderer.invoke("database:update-task",e),deleteTask:e=>n.ipcRenderer.invoke("database:delete-task",e),getAllCourts:()=>n.ipcRenderer.invoke("get-courts"),getAllTags:()=>n.ipcRenderer.invoke("get-tags"),unsyncedCourts:()=>n.ipcRenderer.invoke("unsynced-courts"),unsyncedTags:()=>n.ipcRenderer.invoke("unsynced-tags"),insertCourt:(e,t,i)=>n.ipcRenderer.invoke("insert-court",e,t,i),insertTag:(e,t,i)=>n.ipcRenderer.invoke("insert-tag",e,t,i),updateCourtSync:e=>n.ipcRenderer.invoke("update-court-sync",e),updateTagSync:e=>n.ipcRenderer.invoke("update-tag-sync",e),unsyncedClients:()=>n.ipcRenderer.invoke("unsynced-clients"),updateClientSync:e=>n.ipcRenderer.invoke("update-client-sync",e),insertOrUpdateClients:e=>n.ipcRenderer.invoke("insert-or-update-clients",e),unsyncedCases:()=>n.ipcRenderer.invoke("unsynced-cases"),updateCaseSync:e=>n.ipcRenderer.invoke("update-case-sync",e),insertOrUpdateCases:e=>n.ipcRenderer.invoke("insert-or-update-cases",e)});n.contextBridge.exposeInMainWorld("admin",{deleteUser:e=>n.ipcRenderer.invoke("admin:delete-user",e)});
